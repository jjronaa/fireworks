<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>放烟花</title>
  <style>
    /* 页面样式 */
    body {
      margin: 0;
      overflow: hidden; /* 隐藏滚动条 */
      background-color: black; /* 设置背景为黑色 */
    }
    canvas {
      display: block; /* 让画布充满屏幕 */
    }
  </style>
</head>
<body>
  <canvas id="fireworksCanvas"></canvas>
  <script>
    // 获取 canvas 元素和上下文
    const canvas = document.getElementById('fireworksCanvas');
    const ctx = canvas.getContext('2d');
    
    // 设置画布尺寸
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    // 粒子类
    class Particle {
      constructor(x, y, color, angle, speed) {
        this.x = x;
        this.y = y;
        this.color = color;
        this.angle = angle;
        this.speed = speed;
        this.alpha = 1; // 透明度
        this.radius = Math.random() * 3 + 2; // 粒子大小
      }

      update() {
        this.x += Math.cos(this.angle) * this.speed;
        this.y += Math.sin(this.angle) * this.speed;
        this.speed *= 0.98; // 减速
        this.alpha -= 0.01; // 逐渐透明
      }

      draw() {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(${this.color}, ${this.alpha})`;
        ctx.fill();
      }
    }

    // 创建烟花
    const particles = [];
    function createFirework(x, y) {
      const colors = ['255,0,0', '0,255,0', '0,0,255', '255,255,0'];
      const color = colors[Math.floor(Math.random() * colors.length)];
      for (let i = 0; i < 100; i++) {
        const angle = Math.random() * Math.PI * 2;
        const speed = Math.random() * 5 + 2;
        particles.push(new Particle(x, y, color, angle, speed));
      }
    }

    // 动画循环
    function animate() {
      ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      for (let i = particles.length - 1; i >= 0; i--) {
        const p = particles[i];
        p.update();
        p.draw();
        if (p.alpha <= 0) {
          particles.splice(i, 1); // 移除透明度为 0 的粒子
        }
      }

      requestAnimationFrame(animate);
    }

    // 点击屏幕生成烟花
    canvas.addEventListener('click', (e) => {
      createFirework(e.clientX, e.clientY);
    });

    // 触摸屏幕生成烟花（移动端支持）
    canvas.addEventListener('touchstart', (e) => {
      const touch = e.touches[0];
      createFirework(touch.clientX, touch.clientY);
    });

    // 开始动画
    animate();
  </script>
</body>
</html>
